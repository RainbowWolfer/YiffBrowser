<bf:WindowBase  
    x:Class="YB.E621.Views.E621MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:YB.E621.Views" 
	xmlns:bf="BaseFramework"
	xmlns:subs="clr-namespace:YB.E621.Views.Subs"
	xmlns:service="clr-namespace:YB.E621.Services"
	d:DataContext="{d:DesignInstance Type=local:E621MainWindowViewModel}"
	d:Title="E621 Window"
	mc:Ignorable="d"
    Height="800" 
    Width="1270"
	WindowStartupLocation="CenterScreen">

	<Control.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/YB.E621;component/Resources/Generic.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<bf:CommandProxy x:Key="CloseTabCommand" Command="{Binding CloseTabCommand}"/>

		</ResourceDictionary>
	</Control.Resources>

	<Window.Style>
		<Style TargetType="Window">
			<Style.Triggers>
				<DataTrigger Binding="{Binding ModuleType}" Value="{x:Static bf:ModuleType.E621}">
					<Setter Property="Icon" Value="/BaseFramework;component/Resources/Icons/E621Icon.ico"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding ModuleType}" Value="{x:Static bf:ModuleType.E6AI}">
					<Setter Property="Icon" Value="/BaseFramework;component/Resources/Icons/E6AI.ico"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding ModuleType}" Value="{x:Static bf:ModuleType.E926}">
					<Setter Property="Icon" Value="/BaseFramework;component/Resources/Icons/E621Icon.ico"/>
				</DataTrigger>
			</Style.Triggers>
		</Style>
	</Window.Style>

	<Grid>

		<DockPanel>
			<Border Background="#bfbfbf" Padding="4" DockPanel.Dock="Left">
				<Grid>

					<Grid.RowDefinitions>
						<RowDefinition Height="*"/>
						<RowDefinition Height="auto"/>
					</Grid.RowDefinitions>

					<bf:UniformSpacingPanel Style="{StaticResource CustomVerticalPanel2}">

						<Button x:Name="SiteButton" Height="32" Width="32" Padding="0" Style="{StaticResource CustomButtonStyle2}" ToolTip="Click to switch site">
							<Button.Background>
								<ImageBrush ImageSource="{Binding ModuleType,Converter={StaticResource ModuleTypeIconConverter}}" d:ImageSource="/BaseFramework;component/Resources/Icons/E621.png"/>
							</Button.Background>
						</Button>

						<Border Style="{StaticResource VerticalSeparator}"/>

						<Button x:Name="SearchButton" Height="32" Width="32" ToolTip="Search">
							<bf:FontIcon Text="&#xE721;"/>
						</Button>

					</bf:UniformSpacingPanel>

					<bf:UniformSpacingPanel Style="{StaticResource CustomVerticalPanel2}" Grid.Row="1">

						<Button x:Name="UserButton" Height="32" Width="32" ToolTip="User">
							<Grid>
								<bf:FontIcon d:Text="&#xEA8C;" Visibility="{Binding UserService.IsUserLoading.Value,Converter={StaticResource BoolToVisibilityReConverter}}" >
									<bf:FontIcon.Style>
										<Style TargetType="bf:FontIcon" BasedOn="{StaticResource FontIconBase}">
											<Style.Triggers>
												<DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
													<Setter Property="Text" Value="&#xEA8C;"/>
												</DataTrigger>
												<DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
													<Setter Property="Text" Value="&#xE77B;"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</bf:FontIcon.Style>
								</bf:FontIcon>
								<Border Visibility="{Binding UserService.IsUserLoading.Value,Converter={StaticResource BoolToVisibilityConverter}}">
									<ProgressBar IsIndeterminate="True" Width="20" Height="8" BorderThickness="0" Background="White"/>
								</Border>
							</Grid>
						</Button>

						<Button x:Name="SettingsButton" Height="32" Width="32" ToolTip="Settings" Click="SettingsButton_Click">
							<bf:FontIcon Text="&#xE713;"/>
						</Button>

						<StackPanel>
							<TextBlock Text="{Binding Source={x:Static bf:AppConfig.Version}}" d:Text="1.0.0" TextAlignment="Center" FontSize="10"/>
							<TextBlock Text="Debug" TextAlignment="Center" FontSize="10" Visibility="{Binding Source={x:Static bf:AppConfig.IsDebugging},Converter={StaticResource BoolToVisibilityConverter}}"/>
						</StackPanel>

					</bf:UniformSpacingPanel>

				</Grid>
			</Border>

			<TabControl Padding="0" BorderThickness="0,1,0,0"
				ItemsSource="{Binding Tabs}" 
				d:ItemsSource="{d:SampleData ItemCount=15}"
				SelectedIndex="{Binding TabSelectedIndex,Mode=TwoWay}">

				<TabControl.ItemContainerStyle>
					<Style TargetType="TabItem" BasedOn="{StaticResource CustomTabItemStyle}">
						<Setter Property="ContextMenu">
							<Setter.Value>
								<ContextMenu>
									<MenuItem Header="Close" bf:IconExtension.Glyph="&#xE711;"/>
								</ContextMenu>
							</Setter.Value>
						</Setter>
					</Style>
				</TabControl.ItemContainerStyle>

				<TabControl.ItemTemplate>
					<DataTemplate>
						<Grid MinWidth="100">
							<DockPanel>
								<Button Name="CloseTabButton" Padding="2" VerticalAlignment="Center" BorderThickness="0" Background="Transparent" Cursor="Hand" Margin="2,0,0,0" ToolTip="Close this tab" DockPanel.Dock="Right">
									<bf:FontIcon Text="&#xE711;"/>
								</Button>
								<TextBlock Text="{Binding Tags,Converter={StaticResource TagsDisplayConverter}}" VerticalAlignment="Center"/>
							</DockPanel>

							<bf:ButtonPopup SourceButton="{Binding ElementName=CloseTabButton}">
								<Border Style="{StaticResource ButtonPopupBorder}">
									<bf:UniformSpacingPanel Style="{StaticResource CustomVerticalPanel2}">
										<TextBlock Text="Sure to close this tab?"/>
										<Button Command="{StaticResource CloseTabCommand}" CommandParameter="{Binding}" Padding="4,2">
											<TextBlock Text="Confirm"/>
										</Button>
									</bf:UniformSpacingPanel>
								</Border>
							</bf:ButtonPopup>
						</Grid>
					</DataTemplate>
				</TabControl.ItemTemplate>

				<TabControl.ContentTemplate>
					<DataTemplate>
						<ContentControl Content="{Binding View}"/>
					</DataTemplate>
				</TabControl.ContentTemplate>

				<!--<TabItem>
					<TabItem.Header>
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="Default" VerticalAlignment="Center" Margin="0,0,2,0"/>
							<Button Padding="2" VerticalAlignment="Center" BorderThickness="0" Background="Transparent" Cursor="Hand" Margin="2,0,0,0">
								<c:FontIcon Text="&#xE711;"/>
							</Button>
						</StackPanel>
					</TabItem.Header>
					<ContentControl Content="{Binding PostsViewModel.View}"/>
				</TabItem>-->

			</TabControl>
		</DockPanel>

		<bf:ButtonPopup SourceButton="{Binding ElementName=UserButton}" Placement="Right" HorizontalOffset="6">
			<bf:ButtonPopup.Style>
				<Style TargetType="bf:ButtonPopup">
					<Style.Triggers>
						<DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
							<Setter Property="VerticalOffset" Value="-115"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
							<Setter Property="VerticalOffset" Value="-90"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</bf:ButtonPopup.Style>
			<Border Style="{StaticResource ButtonPopupBorder}">
				<Grid>
					<ContentControl Content="{Binding UserLoginViewModel.View}" Visibility="{Binding IsLoggedIn,Converter={StaticResource BoolToVisibilityReConverter}}"/>
					<ContentControl Content="{Binding UserViewModel.View}" Visibility="{Binding IsLoggedIn,Converter={StaticResource BoolToVisibilityConverter}}"/>
				</Grid>
			</Border>
		</bf:ButtonPopup>

		<!-- Placement="Right" HorizontalOffset="6"-->
		<bf:ButtonPopup x:Name="SearchPopup" SourceButton="{Binding ElementName=SearchButton}">
			<Border Style="{StaticResource ButtonPopupBorder}" MinWidth="300">
				<ContentControl Content="{Binding SearchViewModel.View}"/>
			</Border>
		</bf:ButtonPopup>

		<bf:ButtonPopup x:Name="SitePopup" SourceButton="{Binding ElementName=SiteButton}">
			<Border Style="{StaticResource ButtonPopupBorder}">
				<bf:UniformSpacingPanel Style="{StaticResource CustomVerticalPanel2}">

					<Button Padding="4" Width="90" HorizontalContentAlignment="Left" Style="{StaticResource CustomButtonStyle3}" IsEnabled="{Binding ModuleType,Converter={StaticResource EnumToBoolReConverter},ConverterParameter={x:Static bf:ModuleType.E621}}" Command="{Binding ShowE621Command}">
						<bf:UniformSpacingPanel Style="{StaticResource CustomHorizontalPanel3}">
							<Border Height="32" Width="32" CornerRadius="4">
								<Border.Background>
									<ImageBrush ImageSource="{Binding Source={x:Static bf:ModuleType.E621},Converter={StaticResource ModuleTypeIconConverter}}"/>
								</Border.Background>
							</Border>
							<TextBlock Text="E621" FontWeight="Bold" FontSize="16" Foreground="#01549d"/>
						</bf:UniformSpacingPanel>
					</Button>

					<Button Padding="4" Width="90" HorizontalContentAlignment="Left" Style="{StaticResource CustomButtonStyle3}" IsEnabled="{Binding ModuleType,Converter={StaticResource EnumToBoolReConverter},ConverterParameter={x:Static bf:ModuleType.E926}}" Command="{Binding ShowE926Command}">
						<bf:UniformSpacingPanel Style="{StaticResource CustomHorizontalPanel3}">
							<Border Height="32" Width="32" CornerRadius="4">
								<Border.Background>
									<ImageBrush ImageSource="{Binding Source={x:Static bf:ModuleType.E926},Converter={StaticResource ModuleTypeIconConverter}}"/>
								</Border.Background>
							</Border>
							<TextBlock Text="E926" FontWeight="Bold" FontSize="16"/>
						</bf:UniformSpacingPanel>
					</Button>

					<Button Padding="4" Width="90" HorizontalContentAlignment="Left" Style="{StaticResource CustomButtonStyle3}" IsEnabled="{Binding ModuleType,Converter={StaticResource EnumToBoolReConverter},ConverterParameter={x:Static bf:ModuleType.E6AI}}" Command="{Binding ShowE6AICommand}">
						<bf:UniformSpacingPanel Style="{StaticResource CustomHorizontalPanel3}">
							<Border Height="32" Width="32" CornerRadius="4">
								<Border.Background>
									<ImageBrush ImageSource="{Binding Source={x:Static bf:ModuleType.E6AI},Converter={StaticResource ModuleTypeIconConverter}}"/>
								</Border.Background>
							</Border>
							<TextBlock Text="E6AI" FontWeight="Bold" FontSize="16" Foreground="#fcc02e"/>
						</bf:UniformSpacingPanel>
					</Button>

				</bf:UniformSpacingPanel>
			</Border>
		</bf:ButtonPopup>

		<!--<MediaElement LoadedBehavior="Play" Source="https://static1.e621.net/data/18/50/18504494e372a85c70a917b8bbef9de6.gif" />-->
		<!--<MediaElement LoadedBehavior="Play" Source="https://static1.e621.net/data/91/3d/913d9dd37fa6d5a3cef1e8e91ef79873.gif" />-->
		<Image x:Name="MainImage" Height="500" Width="500" Stretch="UniformToFill"/>
		<!-- gif:ImageBehavior.AnimatedSource="https://static1.e621.net/data/91/3d/913d9dd37fa6d5a3cef1e8e91ef79873.gif"-->

	</Grid>

</bf:WindowBase>
